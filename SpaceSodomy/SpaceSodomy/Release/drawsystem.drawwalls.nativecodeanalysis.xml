<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>color.h</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Color::g' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Color::{ctor}</FUNCTION>
    <DECORATED>??0Color@@QAE@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>color.h</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Color::a' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Color::{ctor}</FUNCTION>
    <DECORATED>??0Color@@QAE@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>color.h</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Color::b' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Color::{ctor}</FUNCTION>
    <DECORATED>??0Color@@QAE@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>color.h</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Color::r' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Color::{ctor}</FUNCTION>
    <DECORATED>??0Color@@QAE@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\github\spacesodomy\spacesodomy\spacesodomy</FILEPATH>
      <FILENAME>drawsystem.drawwalls.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DrawSystem::drawWalls</FUNCTION>
    <DECORATED>?drawWalls@DrawSystem@@QAEXAAVSystem@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>